[target.thumbv6m-none-eabi]
runner = "qemu-system-arm -machine microbit         -cpu cortex-m0 -nographic -semihosting-config enable=on,target=native -kernel"

[target.thumbv7m-none-eabi]
runner = "qemu-system-arm -machine stm32vldiscovery -cpu cortex-m3 -nographic -semihosting-config enable=on,target=native -kernel"

[target.x86_64-unknown-linux-gnu]
# runner = "uxterm -e"

# rustflags = [
#   # By default, the LLD linker is used, which is shipped with the Rust
#   # toolchain. If you run into problems with LLD, you can switch to the
#   # GNU linker by uncommenting this line:
#   # "-C", "linker=arm-none-eabi-ld",

#   # If you need to link to pre-compiled C libraries provided by a C toolchain
#   # use GCC as the linker by uncommenting the three lines below:
#   # "-C", "linker=arm-none-eabi-gcc",
#   # "-C", "link-arg=-Wl,-Tlink.x",
#   # "-C", "link-arg=-nostartfiles",
# ]

[build]
target = "x86_64-unknown-linux-gnu"
# # Pick ONE of these default compilation targets
# # target = "thumbv6m-none-eabi"        # Cortex-M0 and Cortex-M0+
# target = "thumbv7m-none-eabi"            # Cortex-M3 = mdr1986
# # target = "thumbv7em-none-eabi"       # Cortex-M4 and Cortex-M7 (no FPU)
# # target = "thumbv7em-none-eabihf"     # Cortex-M4F and Cortex-M7F (with FPU)
# # target = "thumbv8m.base-none-eabi"   # Cortex-M23
# # target = "thumbv8m.main-none-eabi"   # Cortex-M33 (no FPU)
# # target = "thumbv8m.main-none-eabihf" # Cortex-M33 (with FPU)
# target = "riscv32imc-unknown-none-elf" # mik32-Amur

# https://t.me/rustlang_ru/651766
# debug build for target executable
[profile.dev]
opt-level = 1 # basic optimization to inline iterators and getters
strip = "debuginfo" # strip debug nonsense since debuggers are overrated, remove this to actually do debugging

# debug builds for deps 
[profile.dev.package."*"]
opt-level = 3 # enable full optimization within dependencies - I do not expect to debug my deps
strip = "debuginfo" # strip debug symbols as they are useless with O3 anyway

# debug builds for procmacros
[profile.dev.build-override]
opt-level = 2 # reasonable optimization
# codegen-units = 256 # max threading
#debug = false # when possible - this is generally scary as some procmacros will fail without any feedback

# release build for procmacros - same config as debug build for procmacros
[profile.release.build-override]
opt-level = 2
# codegen-units = 256
debug = false # when possible
